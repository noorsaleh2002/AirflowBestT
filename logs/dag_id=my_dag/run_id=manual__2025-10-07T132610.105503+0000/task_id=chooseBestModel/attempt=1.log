{"timestamp":"2025-10-07T13:26:18.595000Z","level":"info","event":"DAG bundles loaded: dags-folder, example_dags","logger":"airflow.dag_processing.bundles.manager.DagBundlesManager","filename":"manager.py","lineno":179}
{"timestamp":"2025-10-07T13:26:18.598568Z","level":"info","event":"Filling up the DagBag from /opt/airflow/dags/mydag.py","logger":"airflow.models.dagbag.DagBag","filename":"dagbag.py","lineno":593}
{"timestamp":"2025-10-07T13:26:18.704021Z","level":"info","event":"Task instance is in running state","logger":"task.stdout"}
{"timestamp":"2025-10-07T13:26:18.705775Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.QUEUED","logger":"task.stdout"}
{"timestamp":"2025-10-07T13:26:18.706532Z","level":"info","event":"Current task name:chooseBestModel","logger":"task.stdout"}
{"timestamp":"2025-10-07T13:26:18.707294Z","level":"info","event":"Dag name:my_dag","logger":"task.stdout"}
{"timestamp":"2025-10-07T13:26:18.799014Z","level":"info","event":"Raw XCom values: [1, 18, None], types: [<class 'int'>, <class 'int'>, <class 'NoneType'>]","logger":"task.stdout"}
{"timestamp":"2025-10-07T13:26:18.801714Z","level":"info","event":"Best accuracy after conversion: 18.0","logger":"task.stdout"}
{"timestamp":"2025-10-07T13:26:18.794320Z","level":"info","event":"Done. Returned value was: accurate","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator","filename":"python.py","lineno":218}
{"timestamp":"2025-10-07T13:26:18.794705Z","level":"info","event":"Branch into accurate","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator","filename":"branch.py","lineno":44}
{"timestamp":"2025-10-07T13:26:18.803132Z","level":"info","event":"Following branch {'accurate'}","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator","filename":"skipmixin.py","lineno":152}
{"timestamp":"2025-10-07T13:26:18.809272Z","level":"info","event":"Skipping tasks [('inaccurate', -1)]","logger":"airflow.task.operators.airflow.providers.standard.operators.python.BranchPythonOperator","filename":"skipmixin.py","lineno":191}
{"timestamp":"2025-10-07T13:26:18.872262Z","level":"info","event":"Skipping downstream tasks.","logger":"task","filename":"task_runner.py","lineno":935}
{"timestamp":"2025-10-07T13:26:18.949680Z","level":"info","event":"Task instance in success state","logger":"task.stdout"}
{"timestamp":"2025-10-07T13:26:18.950607Z","level":"info","event":" Previous state of the Task instance: TaskInstanceState.RUNNING","logger":"task.stdout"}
{"timestamp":"2025-10-07T13:26:18.951676Z","level":"info","event":"Task operator:<Task(BranchPythonOperator): chooseBestModel>","logger":"task.stdout"}
